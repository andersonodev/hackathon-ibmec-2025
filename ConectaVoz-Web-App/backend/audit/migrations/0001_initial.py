# Generated by Django 5.2.6 on 2025-09-09 13:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(help_text='Tipo de ação realizada', max_length=64)),
                ('category', models.CharField(choices=[('auth', 'Autenticação'), ('voice', 'Relatos de Voz'), ('mood', 'Check-in de Humor'), ('connecta', 'Conectas'), ('council', 'Conselho'), ('mural', 'Mural'), ('admin', 'Administração'), ('system', 'Sistema')], help_text='Categoria da ação', max_length=20)),
                ('object_type', models.CharField(help_text='Tipo do objeto afetado (ex: VoicePost, User)', max_length=64)),
                ('object_id', models.CharField(help_text='ID do objeto afetado', max_length=64)),
                ('object_repr', models.CharField(blank=True, help_text='Representação textual do objeto', max_length=200)),
                ('meta', models.JSONField(blank=True, default=dict, help_text='Metadados da ação (sem payload sensível)')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP do usuário (quando aplicável)', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent do browser')),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'ordering': ['-at'],
            },
        ),
        migrations.CreateModel(
            name='DataRetentionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('retention_type', models.CharField(choices=[('voice_posts', 'Relatos de Voz'), ('mood_checkins', 'Check-ins de Humor'), ('attachments', 'Anexos'), ('conversations', 'Conversas'), ('mural_posts', 'Posts do Mural'), ('audit_logs', 'Logs de Auditoria')], max_length=20)),
                ('policy_name', models.CharField(help_text='Nome da política de retenção aplicada', max_length=100)),
                ('records_affected', models.PositiveIntegerField(help_text='Número de registros removidos')),
                ('date_threshold', models.DateTimeField(help_text='Data limite para retenção')),
                ('details', models.JSONField(blank=True, default=dict, help_text='Detalhes da execução')),
            ],
            options={
                'verbose_name': 'Log de Retenção de Dados',
                'verbose_name_plural': 'Logs de Retenção de Dados',
                'ordering': ['-executed_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_type', models.CharField(choices=[('maintenance', 'Manutenção'), ('backup', 'Backup'), ('migration', 'Migração'), ('security', 'Segurança'), ('performance', 'Performance'), ('error', 'Erro')], max_length=20)),
                ('severity', models.CharField(choices=[('info', 'Informação'), ('warning', 'Aviso'), ('error', 'Erro'), ('critical', 'Crítico')], default='info', max_length=10)),
                ('title', models.CharField(help_text='Título do evento', max_length=200)),
                ('description', models.TextField(help_text='Descrição detalhada do evento')),
                ('affected_components', models.JSONField(blank=True, default=list, help_text='Componentes afetados pelo evento')),
                ('resolved', models.BooleanField(default=False, help_text='Se o evento foi resolvido')),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notas sobre a resolução')),
            ],
            options={
                'verbose_name': 'Evento do Sistema',
                'verbose_name_plural': 'Eventos do Sistema',
                'ordering': ['-timestamp'],
            },
        ),
    ]
